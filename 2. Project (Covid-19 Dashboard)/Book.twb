<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid-19GlobalMonitor_16496308287130' path='/workbooks' revision='1.9' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
        <calculation class='tableau' formula='&quot;Daily&quot;' />
        <members>
          <member value='&quot;Daily&quot;' />
          <member value='&quot;Cumulative&quot;' />
        </members>
      </column>
      <column caption='Countries' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Egypt&quot;'>
        <calculation class='tableau' formula='&quot;Egypt&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antarctica&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire, Sint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burma&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cabo Verde&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Channel Islands&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo (Brazzaville)&quot;' />
          <member value='&quot;Congo (Kinshasa)&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Falkland Islands (Malvinas)&quot;' />
          <member value='&quot;Faroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Gibraltar&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guernsey&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Holy See&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Isle of Man&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jersey&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Korea, South&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Barthelemy&quot;' />
          <member value='&quot;Saint Helena, Ascension and Tristan da Cunha&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Pierre and Miquelon&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St Martin&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan*&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turks and Caicos Islands&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;West Bank and Gaza&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' inline='true' name='federated.1qcueuh0ry0vjb11488xw1lh0yuc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-data-resource-hub/covid-19-case-counts' name='webdata-direct.0v5qg1r15bqs5n1h30cmf1y7ofcq'>
            <connection APIVersion='' authType='custom' authentication='yes' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;covid-19-data-resource-hub/covid-19-case-counts&quot;,&quot;query&quot;:&quot;SELECT * FROM covid_19_activity WHERE report_date BETWEEN &apos;2022-01-01&apos; AND &apos;2022-03-31&apos;&quot;,&quot;queryType&quot;:&quot;sql&quot;,&quot;version&quot;:&quot;1.1.0&quot;}' connectionName='covid-19-data-resource-hub/covid-19-case-counts' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' server-oauth='' urlQuery='state=433778e0-b65f-11ec-a3bc-27882fd29479' username='' usernameAlias='' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='webdata-direct.0v5qg1r15bqs5n1h30cmf1y7ofcq' name='Query Results' table='[QueryTable]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='webdata-direct.0v5qg1r15bqs5n1h30cmf1y7ofcq' name='Query Results' table='[QueryTable]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>people_positive_cases_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_positive_cases_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_positive_cases_count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[province_state_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>province_state_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[continent_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>continent_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[data_source_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>data_source_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_new_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_death_new_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_death_new_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips_number</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[county_fips_number]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>county_fips_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_3_code</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_alpha_3_code]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_alpha_3_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_short_name</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_short_name]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_short_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_2_code</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_alpha_2_code]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_alpha_2_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_new_cases_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_positive_new_cases_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_positive_new_cases_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_death_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_death_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]&quot;' value='Death Count' />
          <alias key='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]&quot;' value='Positive Case' />
        </aliases>
      </column>
      <column caption='Daily Death Difference' datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Calculation_262053224793702404])) - LOOKUP(ZN(SUM([Calculation_262053224793702404])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Calculation_262053224794230791])) - LOOKUP(ZN(SUM([Calculation_262053224794230791])), -1)) / ABS(LOOKUP(ZN(SUM([Calculation_262053224794230791])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_PERCENTILE(COUNT([Calculation_698057964798611459]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Continent_Updated' datatype='string' name='[Calculation_262053224758169600]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([continent_name], &#13;&#10;(CASE [Calculation_262053224761929729]&#13;&#10; WHEN IN [Set 3] THEN &apos;Asia&apos; &#13;&#10; WHEN IN [Set 1] THEN &apos;Africa&apos;&#13;&#10; WHEN IN [Set 2] THEN &apos;America&apos; &#13;&#10; WHEN IN [Set 4] THEN &apos;Europe&apos;&#13;&#10; WHEN IN [Set 5] THEN &apos;Oceania&apos; &#13;&#10; WHEN IN [Set 6] THEN &apos;Antarctica&apos; &#13;&#10;END)&#13;&#10;)' />
      </column>
      <column caption='Countires' datatype='string' name='[Calculation_262053224761929729]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [country_short_name]= &apos;Winter Olympics 2022&apos; THEN &apos;China&apos;&#13;&#10;ELSEIF [country_short_name] = &apos;Summer Olympics 2020&apos; THEN NULL&#13;&#10;else [country_short_name]&#13;&#10;END' />
      </column>
      <column caption='Daily Deaths' datatype='integer' name='[Calculation_262053224793702404]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs([people_death_new_count])' />
      </column>
      <column caption='Cumulative Deaths' datatype='integer' name='[Calculation_262053224793817093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs([people_death_count])' />
      </column>
      <column caption='Daily New Cases' datatype='integer' name='[Calculation_262053224794091526]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs([people_positive_new_cases_count])' />
      </column>
      <column caption='Cumulative Cases' datatype='integer' name='[Calculation_262053224794230791]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs([people_positive_cases_count])' />
      </column>
      <column caption='Death Metric' datatype='integer' name='[Calculation_262053224802373640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224793817093]&#13;&#10;ELSE [Calculation_262053224793702404] END' />
      </column>
      <column caption='Case Metric' datatype='integer' name='[Calculation_262053224804024329]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224794230791]&#13;&#10;ELSE [Calculation_262053224794091526] END' />
      </column>
      <column caption='Death Rate' datatype='real' name='[Calculation_698057964781830144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_262053224802373640]) / sum([Calculation_262053224804024329])' />
      </column>
      <column caption='Country Metrics' datatype='string' name='[Calculation_698057964787642369]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_262053224761929729]=[Parameters].[Parameter 2] THEN [Calculation_262053224761929729] END' />
      </column>
      <column caption='Country Death Rate' datatype='real' name='[Calculation_698057964798611459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_262053224802373640]  /[Calculation_262053224804024329]' />
      </column>
      <column caption='Death Rate by Country' datatype='real' name='[Calculation_698057964811300871]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_262053224802373640]/[Calculation_262053224804024329]' />
      </column>
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Query Results' datatype='table' name='[__tableau_internal_object_id__].[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]' role='measure' type='quantitative' />
      <column datatype='string' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[county_fips_number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='date' name='[report_date]' role='dimension' type='ordinal' />
      <column-instance column='[report_date]' derivation='MDY' name='[md:report_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_262053224761929729]' derivation='None' name='[none:Calculation_262053224761929729:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[pcrk:sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_262053224804024329]' derivation='Sum' name='[sum:Calculation_262053224804024329:qk]' pivot='key' type='quantitative' />
      <column-instance column='[report_date]' derivation='Day-Trunc' name='[tdy:report_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Countires,MDY(report_date))' hidden='true' name='[Action (Countires,MDY(report_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262053224761929729]' />
          <groupfilter function='level-members' level='[md:report_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Countires,MDY(report_date),DAY(report_date))' hidden='true' name='[Action (Countires,MDY(report_date),DAY(report_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262053224761929729]' />
          <groupfilter function='level-members' level='[md:report_date:ok]' />
          <groupfilter function='level-members' level='[tdy:report_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Africa' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[country_short_name]' member='&quot;Algeria&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Angola&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Benin&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Botswana&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Burkina Faso&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Burundi&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cabo Verde&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cameroon&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Central African Republic&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Chad&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Comoros&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Congo (Brazzaville)&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Congo (Kinshasa)&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cote d&apos;Ivoire&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Djibouti&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Egypt&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Equatorial Guinea&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Eritrea&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Eswatini&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Ethiopia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Gabon&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Gambia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Ghana&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Guinea&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Guinea-Bissau&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Kenya&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Lesotho&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Liberia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Libya&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Madagascar&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Malawi&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mali&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mauritania&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mauritius&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mayotte&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Morocco&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mozambique&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Namibia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Niger&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Nigeria&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Reunion&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Rwanda&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saint Helena, Ascension and Tristan da Cunha&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Sao Tome and Principe&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Senegal&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Seychelles&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Sierra Leone&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Somalia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;South Africa&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;South Sudan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Sudan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Tanzania&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Togo&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Tunisia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Uganda&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Zambia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Zimbabwe&quot;' />
        </groupfilter>
      </group>
      <group caption='America' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[country_short_name]' member='&quot;Anguilla&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Antigua and Barbuda&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Argentina&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Aruba&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bahamas&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Barbados&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Belize&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bermuda&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bolivia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bonaire, Sint Eustatius and Saba&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;British Virgin Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cayman Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Chile&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Colombia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Costa Rica&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cuba&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Curacao&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Dominica&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Dominican Republic&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Ecuador&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;El Salvador&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Falkland Islands (Malvinas)&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;French Guiana&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Greenland&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Grenada&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Guadeloupe&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Guyana&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Haiti&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Honduras&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Jamaica&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Martinique&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Montserrat&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Nicaragua&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Panama&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Paraguay&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Peru&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saint Barthelemy&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saint Kitts and Nevis&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saint Lucia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saint Pierre and Miquelon&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saint Vincent and the Grenadines&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Sint Maarten&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;St Martin&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Suriname&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Trinidad and Tobago&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Turks and Caicos Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;United States&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Uruguay&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Venezuela&quot;' />
        </groupfilter>
      </group>
      <group caption='Asia' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[country_short_name]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bahrain&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bhutan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Brunei&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Burma&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cambodia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Iran&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Iraq&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Israel&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Japan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Jordan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Kazakhstan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Korea, South&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Kuwait&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Kyrgyzstan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Laos&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Lebanon&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Malaysia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Maldives&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Mongolia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Nepal&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Oman&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Philippines&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Qatar&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Saudi Arabia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Sri Lanka&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Syria&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Taiwan*&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Tajikistan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Timor-Leste&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Turkey&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;United Arab Emirates&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Uzbekistan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Vietnam&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;West Bank and Gaza&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Yemen&quot;' />
        </groupfilter>
      </group>
      <group caption='Europe' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[country_short_name]' member='&quot;Albania&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Andorra&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Armenia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Austria&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Azerbaijan&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Belarus&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Belgium&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Bulgaria&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Channel Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Croatia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cyprus&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Czechia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Denmark&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Faroe Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Gibraltar&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Greece&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Guernsey&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Holy See&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Isle of Man&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Jersey&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Kosovo&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Latvia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Liechtenstein&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Lithuania&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Luxembourg&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Malta&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Moldova&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Monaco&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Montenegro&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Netherlands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;North Macedonia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Norway&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Poland&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Portugal&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Romania&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;San Marino&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Serbia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Slovakia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Slovenia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Spain&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Sweden&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Switzerland&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Ukraine&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;United Kingdom&quot;' />
        </groupfilter>
      </group>
      <group caption='Oceania' name='[Set 5]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[country_short_name]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Cook Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Fiji&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;French Polynesia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Kiribati&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Marshall Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Micronesia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;New Caledonia&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;New Zealand&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Palau&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Papua New Guinea&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Samoa&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Solomon Islands&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Tonga&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Vanuatu&quot;' />
          <groupfilter function='member' level='[country_short_name]' member='&quot;Wallis and Futuna&quot;' />
        </groupfilter>
      </group>
      <group caption='Antarctica' name='[Set 6]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[Calculation_262053224761929729]' member='&quot;Antarctica&quot;' />
      </group>
      <drill-paths>
        <drill-path name='continent_name, country_short_name'>
          <field>[Calculation_262053224758169600]</field>
          <field>[Calculation_262053224761929729]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Bug/Documents/My Tableau Repository/Datasources/federated.1qcueuh0ry0vjb11488xw1lh0yuc_0mzvtpc1jv98a716mrmdv0fso20b.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/07/2022 10:54:17 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='covid-19-data-resource-hub/covid-19-case-counts' increment-value='%null%' refresh-type='create' rows-inserted='320131' timestamp-start='2022-04-07 10:53:20.565' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>people_positive_cases_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_positive_cases_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_positive_cases_count</remote-alias>
              <ordinal>0</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64010</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>1</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9396</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province_state_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province_state_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province_state_name</remote-alias>
              <ordinal>2</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>report_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[report_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>report_date</remote-alias>
              <ordinal>3</ordinal>
              <family>Query Results</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data_source_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[data_source_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data_source_name</remote-alias>
              <ordinal>5</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_death_new_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_death_new_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_death_new_count</remote-alias>
              <ordinal>6</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips_number</remote-alias>
              <ordinal>7</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21618</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_alpha_3_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_alpha_3_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_alpha_3_code</remote-alias>
              <ordinal>8</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1930</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_short_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_short_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_short_name</remote-alias>
              <ordinal>9</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2445</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_alpha_2_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_alpha_2_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_alpha_2_code</remote-alias>
              <ordinal>10</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1930</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_positive_new_cases_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_positive_new_cases_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_positive_new_cases_count</remote-alias>
              <ordinal>11</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2441</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_death_count</remote-alias>
              <ordinal>12</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4621</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[QueryTable_70E0C3C8B47D4355A218E6A4381B5E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[pcrk:sum:Calculation_262053224802373640:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_262053224761929729:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Martin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena, Ascension and Tristan da Cunha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
          <calculation class='tableau' formula='&quot;Daily&quot;' />
        </column>
        <column caption='Countries' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Egypt&quot;'>
          <calculation class='tableau' formula='&quot;Egypt&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Query Results' id='QueryTable_70E0C3C8B47D4355A218E6A4381B5E01'>
            <properties context=''>
              <relation connection='webdata-direct.0v5qg1r15bqs5n1h30cmf1y7ofcq' name='Query Results' table='[QueryTable]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action2_9AB56DAB34AA4D6496F03B013C5B1C6B]'>
      <source dashboard='Covid Dashboard' type='sheet'>
        <exclude-sheet name='Country Metrics' />
        <exclude-sheet name='World Total' />
        <exclude-sheet name='Global Counts' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='World Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Covid Dashboard' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2_BCA38D956852435E968EF4B0DBD4C8D4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Countires,Country Metrics,Measure Names' />
        <param name='target' value='Covid Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Countries barchart'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.1qcueuh0ry0vjb11488xw1lh0yuc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
              <calculation class='tableau' formula='&quot;Daily&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qcueuh0ry0vjb11488xw1lh0yuc'>
            <column caption='Countires' datatype='string' name='[Calculation_262053224761929729]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [country_short_name]= &apos;Winter Olympics 2022&apos; THEN &apos;China&apos;&#13;&#10;ELSEIF [country_short_name] = &apos;Summer Olympics 2020&apos; THEN NULL&#13;&#10;else [country_short_name]&#13;&#10;END' />
            </column>
            <column caption='Daily Deaths' datatype='integer' name='[Calculation_262053224793702404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_new_count])' />
            </column>
            <column caption='Cumulative Deaths' datatype='integer' name='[Calculation_262053224793817093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_count])' />
            </column>
            <column caption='Daily New Cases' datatype='integer' name='[Calculation_262053224794091526]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_new_cases_count])' />
            </column>
            <column caption='Cumulative Cases' datatype='integer' name='[Calculation_262053224794230791]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_cases_count])' />
            </column>
            <column caption='Death Metric' datatype='integer' name='[Calculation_262053224802373640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224793817093]&#13;&#10;ELSE [Calculation_262053224793702404] END' />
            </column>
            <column caption='Case Metric' datatype='integer' name='[Calculation_262053224804024329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224794230791]&#13;&#10;ELSE [Calculation_262053224794091526] END' />
            </column>
            <column datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[report_date]' derivation='MDY' name='[md:report_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_262053224761929729]' derivation='None' name='[none:Calculation_262053224761929729:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262053224804024329]' derivation='Sum' name='[sum:Calculation_262053224804024329:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' direction='DESC' using='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' />
          <filter class='quantitative' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' scope='cols' value='Deaths' />
            <format attr='title' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' scope='cols' value='Cases' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' value='112' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' value='Measure Names' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.65867406129837036' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]</rows>
        <cols>([federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk] + [federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk])</cols>
        <pages>
          <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{75A9FEDC-19A3-4988-89FA-D58C7C0FF2D0}' />
    </worksheet>
    <worksheet name='Country Metrics'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.1qcueuh0ry0vjb11488xw1lh0yuc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
              <calculation class='tableau' formula='&quot;Daily&quot;' />
            </column>
            <column caption='Countries' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Egypt&quot;'>
              <calculation class='tableau' formula='&quot;Egypt&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qcueuh0ry0vjb11488xw1lh0yuc'>
            <column caption='Countires' datatype='string' name='[Calculation_262053224761929729]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [country_short_name]= &apos;Winter Olympics 2022&apos; THEN &apos;China&apos;&#13;&#10;ELSEIF [country_short_name] = &apos;Summer Olympics 2020&apos; THEN NULL&#13;&#10;else [country_short_name]&#13;&#10;END' />
            </column>
            <column caption='Daily Deaths' datatype='integer' name='[Calculation_262053224793702404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_new_count])' />
            </column>
            <column caption='Cumulative Deaths' datatype='integer' name='[Calculation_262053224793817093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_count])' />
            </column>
            <column caption='Daily New Cases' datatype='integer' name='[Calculation_262053224794091526]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_new_cases_count])' />
            </column>
            <column caption='Cumulative Cases' datatype='integer' name='[Calculation_262053224794230791]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_cases_count])' />
            </column>
            <column caption='Death Metric' datatype='integer' name='[Calculation_262053224802373640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224793817093]&#13;&#10;ELSE [Calculation_262053224793702404] END' />
            </column>
            <column caption='Case Metric' datatype='integer' name='[Calculation_262053224804024329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224794230791]&#13;&#10;ELSE [Calculation_262053224794091526] END' />
            </column>
            <column caption='Death Rate' datatype='real' name='[Calculation_698057964781830144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_262053224802373640]) / sum([Calculation_262053224804024329])' />
            </column>
            <column caption='Country Metrics' datatype='string' name='[Calculation_698057964787642369]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_262053224761929729]=[Parameters].[Parameter 2] THEN [Calculation_262053224761929729] END' />
            </column>
            <column datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[report_date]' derivation='MDY' name='[md:report_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_698057964787642369]' derivation='None' name='[none:Calculation_698057964787642369:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262053224804024329]' derivation='Sum' name='[sum:Calculation_262053224804024329:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_698057964781830144]' derivation='User' name='[usr:Calculation_698057964781830144:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[usr:Calculation_698057964781830144:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[usr:Calculation_698057964781830144:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_698057964787642369:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_698057964787642369:nk]' />
              <groupfilter function='member' level='[none:Calculation_698057964787642369:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]</column>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_698057964787642369:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[usr:Calculation_698057964781830144:qk]' value='p0.00%' />
            <format attr='width' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_698057964787642369:nk]' value='66' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_698057964787642369:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]</rows>
        <cols>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_698057964787642369:nk]</cols>
        <pages>
          <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{7DE37658-C1A0-4D79-B8CF-B109BA2B3876}' />
    </worksheet>
    <worksheet name='Global Counts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Rockwell Extra Bold' fontsize='12'>Global Totals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.1qcueuh0ry0vjb11488xw1lh0yuc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
              <calculation class='tableau' formula='&quot;Daily&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qcueuh0ry0vjb11488xw1lh0yuc'>
            <column caption='Daily Deaths' datatype='integer' name='[Calculation_262053224793702404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_new_count])' />
            </column>
            <column caption='Cumulative Deaths' datatype='integer' name='[Calculation_262053224793817093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_count])' />
            </column>
            <column caption='Daily New Cases' datatype='integer' name='[Calculation_262053224794091526]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_new_cases_count])' />
            </column>
            <column caption='Cumulative Cases' datatype='integer' name='[Calculation_262053224794230791]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_cases_count])' />
            </column>
            <column caption='Death Metric' datatype='integer' name='[Calculation_262053224802373640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224793817093]&#13;&#10;ELSE [Calculation_262053224793702404] END' />
            </column>
            <column caption='Case Metric' datatype='integer' name='[Calculation_262053224804024329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224794230791]&#13;&#10;ELSE [Calculation_262053224794091526] END' />
            </column>
            <column caption='Death Rate' datatype='real' name='[Calculation_698057964781830144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_262053224802373640]) / sum([Calculation_262053224804024329])' />
            </column>
            <column-instance column='[report_date]' derivation='MDY' name='[md:report_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262053224804024329]' derivation='Sum' name='[sum:Calculation_262053224804024329:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_698057964781830144]' derivation='User' name='[usr:Calculation_698057964781830144:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[usr:Calculation_698057964781830144:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[usr:Calculation_698057964781830144:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[usr:Calculation_698057964781830144:qk]' value='p0.00%' />
            <format attr='width' value='88' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]</rows>
        <cols />
        <pages>
          <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6073336F-5DF3-43FC-8116-E6E8E8D6C478}' />
    </worksheet>
    <worksheet name='World Map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.1qcueuh0ry0vjb11488xw1lh0yuc' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
              <calculation class='tableau' formula='&quot;Daily&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qcueuh0ry0vjb11488xw1lh0yuc'>
            <column caption='Countires' datatype='string' name='[Calculation_262053224761929729]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [country_short_name]= &apos;Winter Olympics 2022&apos; THEN &apos;China&apos;&#13;&#10;ELSEIF [country_short_name] = &apos;Summer Olympics 2020&apos; THEN NULL&#13;&#10;else [country_short_name]&#13;&#10;END' />
            </column>
            <column caption='Daily Deaths' datatype='integer' name='[Calculation_262053224793702404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_new_count])' />
            </column>
            <column caption='Cumulative Deaths' datatype='integer' name='[Calculation_262053224793817093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_count])' />
            </column>
            <column caption='Daily New Cases' datatype='integer' name='[Calculation_262053224794091526]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_new_cases_count])' />
            </column>
            <column caption='Cumulative Cases' datatype='integer' name='[Calculation_262053224794230791]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_cases_count])' />
            </column>
            <column caption='Death Metric' datatype='integer' name='[Calculation_262053224802373640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224793817093]&#13;&#10;ELSE [Calculation_262053224793702404] END' />
            </column>
            <column caption='Case Metric' datatype='integer' name='[Calculation_262053224804024329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224794230791]&#13;&#10;ELSE [Calculation_262053224794091526] END' />
            </column>
            <column datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[report_date]' derivation='MDY' name='[md:report_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_262053224761929729]' derivation='None' name='[none:Calculation_262053224761929729:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262053224804024329]' derivation='Sum' name='[sum:Calculation_262053224804024329:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Latitude (generated)]</column>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)]' field-type='quantitative' max='12333166.850492261' min='-12823515.325694129' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Latitude (generated)]' field-type='quantitative' max='12389167.686740499' min='-4538206.4825236499' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)]' field-type='quantitative' fold='true' max='12333166.850492261' min='-12823515.325694129' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' max='500' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' max='100000' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Date: </run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Country: </run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Cases:<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Deaths:<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' />
              <lod column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' />
              <geometry column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Date: </run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Country: </run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Cases:<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Deaths:<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' />
              <lod column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Date: </run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Country: </run>
                <run bold='true'><![CDATA[<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Cases:<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Deaths:<[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Latitude (generated)]</rows>
        <cols>([federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)] + [federated.1qcueuh0ry0vjb11488xw1lh0yuc].[Longitude (generated)])</cols>
        <pages>
          <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{FAE1773A-23A6-49D8-9A57-D7FE903FD538}' />
    </worksheet>
    <worksheet name='World Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#474747' fontname='Rockwell Extra Bold' fontsize='12'> Timeline by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data-resource-hub/covid-19-case-counts' name='federated.1qcueuh0ry0vjb11488xw1lh0yuc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
              <calculation class='tableau' formula='&quot;Daily&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qcueuh0ry0vjb11488xw1lh0yuc'>
            <column caption='Countires' datatype='string' name='[Calculation_262053224761929729]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [country_short_name]= &apos;Winter Olympics 2022&apos; THEN &apos;China&apos;&#13;&#10;ELSEIF [country_short_name] = &apos;Summer Olympics 2020&apos; THEN NULL&#13;&#10;else [country_short_name]&#13;&#10;END' />
            </column>
            <column caption='Daily Deaths' datatype='integer' name='[Calculation_262053224793702404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_new_count])' />
            </column>
            <column caption='Cumulative Deaths' datatype='integer' name='[Calculation_262053224793817093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_death_count])' />
            </column>
            <column caption='Daily New Cases' datatype='integer' name='[Calculation_262053224794091526]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_new_cases_count])' />
            </column>
            <column caption='Cumulative Cases' datatype='integer' name='[Calculation_262053224794230791]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([people_positive_cases_count])' />
            </column>
            <column caption='Death Metric' datatype='integer' name='[Calculation_262053224802373640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224793817093]&#13;&#10;ELSE [Calculation_262053224793702404] END' />
            </column>
            <column caption='Case Metric' datatype='integer' name='[Calculation_262053224804024329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Cumulative&apos; then [Calculation_262053224794230791]&#13;&#10;ELSE [Calculation_262053224794091526] END' />
            </column>
            <column datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[report_date]' derivation='MDY' name='[md:report_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_262053224761929729]' derivation='None' name='[none:Calculation_262053224761929729:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262053224802373640]' derivation='Sum' name='[sum:Calculation_262053224802373640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262053224804024329]' derivation='Sum' name='[sum:Calculation_262053224804024329:qk]' pivot='key' type='quantitative' />
            <column-instance column='[report_date]' derivation='Day-Trunc' name='[tdy:report_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[tdy:report_date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[tdy:report_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' scope='rows' value='Deaths' />
            <format attr='title' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' scope='rows' value='Cases' />
            <format attr='width' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' value='60' />
            <format attr='width' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' value='60' />
            <format attr='height' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]' value='90' />
            <format attr='height' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[tdy:report_date:qk]' value='46' />
            <format attr='title' class='0' field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[tdy:report_date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk] + [federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk])</rows>
        <cols>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[tdy:report_date:qk]</cols>
        <pages>
          <column>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-pattern='line-pattern-dotted' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{496DB26A-4E25-42C7-93BA-4334EC3A98D4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#55007f' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-weight' value='bold' />
          <format attr='font-family' value='Rockwell Extra Bold' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Daily / Cumulative' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Daily&quot;'>
          <calculation class='tableau' formula='&quot;Daily&quot;' />
          <members>
            <member value='&quot;Daily&quot;' />
            <member value='&quot;Cumulative&quot;' />
          </members>
        </column>
        <column caption='Countries' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Egypt&quot;'>
          <calculation class='tableau' formula='&quot;Egypt&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Anguilla&quot;' />
            <member value='&quot;Antarctica&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bermuda&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bonaire, Sint Eustatius and Saba&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;British Virgin Islands&quot;' />
            <member value='&quot;Brunei&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burma&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cabo Verde&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cayman Islands&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Channel Islands&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo (Brazzaville)&quot;' />
            <member value='&quot;Congo (Kinshasa)&quot;' />
            <member value='&quot;Cook Islands&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Curacao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Falkland Islands (Malvinas)&quot;' />
            <member value='&quot;Faroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Guiana&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Gibraltar&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guadeloupe&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guernsey&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea-Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Holy See&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Isle of Man&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jersey&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kiribati&quot;' />
            <member value='&quot;Korea, South&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Marshall Islands&quot;' />
            <member value='&quot;Martinique&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mayotte&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Micronesia&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Monaco&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Montserrat&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palau&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Reunion&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saint Barthelemy&quot;' />
            <member value='&quot;Saint Helena, Ascension and Tristan da Cunha&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Pierre and Miquelon&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;Samoa&quot;' />
            <member value='&quot;San Marino&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Sint Maarten&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;St Martin&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan*&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor-Leste&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Tonga&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turks and Caicos Islands&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Wallis and Futuna&quot;' />
            <member value='&quot;West Bank and Gaza&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='104' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='65' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='43610' id='7' param='horz' type-v2='layout-flow' w='49200' x='800' y='14349'>
                <zone h='43610' id='5' type-v2='layout-basic' w='49200' x='800' y='14349'>
                  <zone h='43610' id='3' name='World Map' w='49200' x='800' y='14349'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='41041' id='39' name='World Total' w='79700' x='800' y='57959'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43610' id='31' name='Countries barchart' w='49200' x='50000' y='14349'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#dfe7e8' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='13349' id='53' type-v2='text' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Rockwell Extra Bold' fontsize='18'> Covid-19 Global Monitor</run>
                  <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>Æ </run>
                  <run fontalignment='1'>Æ&#10;&#10;</run>
                  <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Rockwell Extra Bold' fontsize='10'>01.01.2022 - 31.03.2022</run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Rockwell Extra Bold' fontsize='10'>Select a country to see details</run>
                  <run fontalignment='1'>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#55007f' />
                </zone-style>
              </zone>
              <zone h='41041' id='64' name='Global Counts' w='18700' x='80500' y='57959'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f7f1f6' />
          </zone-style>
        </zone>
        <zone count='4' h='10500' id='10' name='World Map' name1='Countries barchart' name2='Global Counts' name3='World Total' name4='Country Metrics' show-title='false' synchronized='1' type-v2='currpage' w='16800' x='81600' y='2375' />
        <zone h='7250' id='32' name='Countries barchart' pane-specification-id='2' param='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' type-v2='color' w='14000' x='51100' y='50750' />
        <zone custom-title='true' h='7875' id='22' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='13600' x='1800' y='4250'>
          <formatted-text>
            <run>Æ   </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#55007f' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7250' id='106' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='17000' x='81100' y='77500'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='11'>Countries</run>
          </formatted-text>
        </zone>
        <zone h='14500' id='102' name='Country Metrics' w='18700' x='81300' y='84000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='132' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='131' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='13349' id='53' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Rockwell Extra Bold' fontsize='18'> Covid-19 Global Monitor</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>Æ </run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Rockwell Extra Bold' fontsize='10'>01.01.2022 - 31.03.2022</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Rockwell Extra Bold' fontsize='10'>Select a country to see details</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#55007f' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7875' id='22' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='13600' x='1800' y='4250'>
                  <formatted-text>
                    <run>Æ   </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#55007f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43610' id='3' is-fixed='true' name='World Map' w='49200' x='800' y='14349'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43610' id='31' is-fixed='true' name='Countries barchart' w='49200' x='50000' y='14349'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfe7e8' />
                  </zone-style>
                </zone>
                <zone h='7250' id='32' name='Countries barchart' pane-specification-id='2' param='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' type-v2='color' w='14000' x='51100' y='50750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41041' id='39' is-fixed='true' name='World Total' w='79700' x='800' y='57959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41041' id='64' is-fixed='true' name='Global Counts' w='18700' x='80500' y='57959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7250' id='106' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='17000' x='81100' y='77500'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='11'>Countries</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='116' h='14500' id='102' is-fixed='true' name='Country Metrics' w='18700' x='81300' y='84000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='4' h='10500' id='10' name='World Map' name1='Countries barchart' name2='Global Counts' name3='World Total' name4='Country Metrics' show-title='false' synchronized='1' type-v2='currpage' w='16800' x='81600' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f7f1f6' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F41DE072-889B-4D3F-9C35-C0D9B96F075E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20220331</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:people_positive_new_cases_count:qk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{57E2247F-B81A-4787-8187-07840957AA92}' />
    </window>
    <window class='worksheet' name='World Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20220131</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:report_date:ok]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[tdy:report_date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81F03ECB-6744-4607-9295-B8E524944394}' />
    </window>
    <window class='worksheet' name='Countries barchart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20220321</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81E73C56-EEBC-405F-BDA6-0740E568C553}' />
    </window>
    <window class='worksheet' name='Global Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20220331</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:report_date:ok]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BB7BA2D-147C-4BBB-B3E9-4BBFD06A1249}' />
    </window>
    <window class='worksheet' name='Country Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20220101</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_698057964787642369:nk]</field>
            <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7BC8F4BD-0BEC-4F47-A64E-9CD439BE6C91}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid Dashboard'>
      <viewpoints>
        <viewpoint name='Countries barchart'>
          <current-page>
            <multibucket>
              <bucket>20220214</bucket>
            </multibucket>
          </current-page>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]</axis>
                </node-reference>
                <page-reference>
                  <fields>
                    <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[md:report_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>20220214</bucket>
                  </multibucket>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Country Metrics'>
          <current-page>
            <multibucket>
              <bucket>20220214</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Global Counts'>
          <current-page>
            <multibucket>
              <bucket>20220214</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='World Map'>
          <current-page>
            <multibucket>
              <bucket>20220214</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224802373640:qk]</field>
              <field>[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[sum:Calculation_262053224804024329:qk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='World Total'>
          <current-page>
            <multibucket>
              <bucket>20220214</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1qcueuh0ry0vjb11488xw1lh0yuc].[none:Calculation_262053224761929729:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='64' />
      <simple-id uuid='{D72B3928-986A-4068-883C-A1E9E489CB4A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries barchart' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Country Metrics' width='170'>
      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
      Izc8QbpX/D8Q7X6LzB2zSwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Covid Dashboard' width='192'>
      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
      Pu38/zkLBQLomN3mAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='Global Counts' width='180'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map' width='192'>
      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
      Yf4flqFX4Bo6q84AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='World Total' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
